"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[71989],{28597:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>a,data:()=>i});var s=o(9588);const n={},a=(0,o(23762).A)(n,[["render",function(e,t){const o=(0,s.g2)("RouteLink");return(0,s.uX)(),(0,s.CE)("div",null,[t[8]||(t[8]=(0,s.Lk)("h1",{id:"gledopto-gl-spi-206p",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#gledopto-gl-spi-206p"},[(0,s.Lk)("span",null,"Gledopto GL-SPI-206P")])],-1)),(0,s.Lk)("table",null,[t[6]||(t[6]=(0,s.Lk)("thead",null,[(0,s.Lk)("tr",null,[(0,s.Lk)("th"),(0,s.Lk)("th")])],-1)),(0,s.Lk)("tbody",null,[t[2]||(t[2]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Model"),(0,s.Lk)("td",null,"GL-SPI-206P")],-1)),(0,s.Lk)("tr",null,[t[1]||(t[1]=(0,s.Lk)("td",null,"Vendor",-1)),(0,s.Lk)("td",null,[(0,s.bF)(o,{to:"/supported-devices/#v=Gledopto"},{default:(0,s.k6)(()=>[...t[0]||(t[0]=[(0,s.eW)("Gledopto",-1)])]),_:1})])]),t[3]||(t[3]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Description"),(0,s.Lk)("td",null,"Tuya SPI Pixel Controller RGBCCT/RGBW/RGB")],-1)),t[4]||(t[4]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Exposes"),(0,s.Lk)("td",null,"light (state, brightness)")],-1)),t[5]||(t[5]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Picture"),(0,s.Lk)("td",null,[(0,s.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/GL-SPI-206P.png",alt:"Gledopto GL-SPI-206P"})])],-1))])]),t[9]||(t[9]=(0,s.Fv)('<h1 id="button-functions" tabindex="-1"><a class="header-anchor" href="#button-functions"><span>Button Functions</span></a></h1><p><strong>Opt:</strong></p><ol><li><strong>Short press:</strong> Turn lights on/off.</li><li><strong>Double short press:</strong> Cycle through lighting dynamic effects (Total 24 dynamicmodes). <strong>Triple short press:</strong> Toggle power-on memory function, the connected strip3.fashes once to confrm.(Default is memory off. The power-on memoryfunction determines whether the controller remembers its on/off statebefore power loss).</li><li><strong>Long press:</strong> Reset the controller-clear Wi-Fi network and RF remotepairing and return to initial factory settings. (indication: strip flashes fivetimes, then the status LED blinks).Initial settings are: 1.Chip type: WS2811;2.Color order: RGB; 3. Number of chips: 60.</li></ol><p><strong>Push:</strong></p><ol><li><strong>Short press:</strong> Turn lights on/off.2.Double short press: Cycle through lighting dynamic effects (Total 24 dynamicmodes).</li><li><strong>Long press:</strong> Adjust brightness (holding increases brightness; after release,holding again decreases brightness).</li></ol><h1 id="supported-chips" tabindex="-1"><a class="header-anchor" href="#supported-chips"><span>Supported chips</span></a></h1><table><thead><tr><th>Chip model</th><th>Compatible chip models</th></tr></thead><tbody><tr><td>WS2801</td><td>WS2803</td></tr><tr><td>LPD6803</td><td>LPD1101,D705,UCS6909,UCS6912</td></tr><tr><td>LPD8803</td><td>LPD8806</td></tr><tr><td>TM1809</td><td>TM1804,TM1812,UCS1903,UCS1909,UCS1912,SK6813,UCS2903,UCS2909,UCS2912,WS2811,WS2812,WS2813,WS2815,SM16703P,GS8206</td></tr><tr><td>TM1814B(RGBW)</td><td></td></tr><tr><td>TM1934A</td><td></td></tr><tr><td>SK6812(RGBW)</td><td>UCS2904(RGBW),SM16704(RGBW)</td></tr><tr><td>SK9822</td><td></td></tr><tr><td>UCS2904B(RGBW)</td><td></td></tr><tr><td>UCS8904B(RGBW)</td><td></td></tr></tbody></table><h1 id="indicator-light-status" tabindex="-1"><a class="header-anchor" href="#indicator-light-status"><span>Indicator Light Status</span></a></h1><p><strong>Flashing:</strong> Not Connected to Network</p><p><strong>Steady On:</strong> Connected to Network</p><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>Options</span></a></h2>',11)),(0,s.Lk)("p",null,[(0,s.Lk)("em",null,[(0,s.bF)(o,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,s.k6)(()=>[...t[7]||(t[7]=[(0,s.eW)("How to use device type specific configuration",-1)])]),_:1})])]),t[10]||(t[10]=(0,s.Fv)('<ul><li><p><code>transition</code>: Controls the transition time (in seconds) of on/off, brightness, color temperature (if applicable) and color (if applicable) changes. Defaults to <code>0</code> (no transition). The value must be a number with a minimum value of <code>0</code></p></li><li><p><code>state_action</code>: State actions will also be published as &#39;action&#39; when true (default false). The value must be <code>true</code> or <code>false</code></p></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="light" tabindex="-1"><a class="header-anchor" href="#light"><span>Light</span></a></h3><p>This light supports the following features: <code>state</code>, <code>brightness</code>.</p><ul><li><code>state</code>: To control the state publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state&quot;: &quot;ON&quot;}</code>, <code>{&quot;state&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state&quot;: &quot;TOGGLE&quot;}</code>. To read the state send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state&quot;: &quot;&quot;}</code>.</li><li><code>brightness</code>: To control the brightness publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;brightness&quot;: VALUE}</code> where <code>VALUE</code> is a number between <code>0</code> and <code>254</code>. To read the brightness send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;brightness&quot;: &quot;&quot;}</code>.</li></ul><h4 id="transition" tabindex="-1"><a class="header-anchor" href="#transition"><span>Transition</span></a></h4><p>For all of the above mentioned features it is possible to do a transition of the value over time. To do this add an additional property <code>transition</code> to the payload which is the transition time in seconds. Examples: <code>{&quot;brightness&quot;:156,&quot;transition&quot;:3}</code>, <code>{&quot;color_temp&quot;:241,&quot;transition&quot;:1}</code>.</p><h4 id="moving-stepping" tabindex="-1"><a class="header-anchor" href="#moving-stepping"><span>Moving/stepping</span></a></h4><p>Instead of setting a value (e.g. brightness) directly it is also possible to:</p><ul><li>move: this will automatically move the value over time, to stop send value <code>stop</code> or <code>0</code>.</li><li>step: this will increment/decrement the current value by the given one.</li></ul><p>The direction of move and step can be either up or down, provide a negative value to move/step down, a positive value to move/step up. To do this send a payload like below to <code>zigbee2mqtt/FRIENDLY_NAME/set</code></p><p><strong>NOTE</strong>: brightness move/step will stop at the minimum brightness and won&#39;t turn on the light when it&#39;s off. In this case use <code>brightness_move_onoff</code>/<code>brightness_step_onoff</code></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token string-property property">&quot;brightness_move&quot;</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token comment">// Starts moving brightness down at 40 units per second</span></span>\n<span class="line">  <span class="token string-property property">&quot;brightness_move&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// Stop moving brightness</span></span>\n<span class="line">  <span class="token string-property property">&quot;brightness_step&quot;</span><span class="token operator">:</span> <span class="token number">40</span> <span class="token comment">// Increases brightness by 40</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="effect-enum" tabindex="-1"><a class="header-anchor" href="#effect-enum"><span>Effect (enum)</span></a></h3><p>Triggers an effect on the light (e.g. make light blink for a few seconds). Value will <strong>not</strong> be published in the state. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;effect&quot;: NEW_VALUE}</code>. The possible values are: <code>blink</code>, <code>breathe</code>, <code>okay</code>, <code>channel_change</code>, <code>finish_effect</code>, <code>stop_effect</code>.</p>',15))])}]]),i=JSON.parse('{"path":"/devices/GL-SPI-206P.html","title":"Gledopto GL-SPI-206P control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Gledopto GL-SPI-206P control via MQTT","description":"Integrate your Gledopto GL-SPI-206P via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-08-27T14:37:38.000Z"},"git":{"updatedTime":1758047388000,"contributors":[{"name":"leroyloren","username":"leroyloren","email":"lama18@gmail.com","commits":1,"url":"https://github.com/leroyloren"}],"changelog":[{"hash":"70315e372490e624fd67f3c70b300330e8a132bb","time":1758047388000,"email":"lama18@gmail.com","author":"leroyloren","message":"Merge branch \'Koenkk:master\' into master"}]},"filePathRelative":"devices/GL-SPI-206P.md"}')}}]);